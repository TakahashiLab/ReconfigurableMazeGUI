function SerialCommunication(handles, str, num)
%シリアルポート
s = handles.serial;
%条件分岐
switch str
  %センサ２アウトプットの送信--------------------------------------------------
  % データは
  % ['B'][センサ番号]([出力先番号][ハイロー][連続動作不許可][遅延時間])×４　の１８バイトが１セット
  %--------------------------------------------------------------------------
  case 'B'
    %１２セット
    for i = 1:12
      %識別コード「B」
      fprintf(s, '%c', 'B');
      %センサのインデックス
      c = char( i - 1 );
      fprintf(s, '%c', c);
      for j = 1:4
        %アウトプットの種類
        c = char( handles.s2oGUI{i,1}(j) );
        fprintf(s, '%c', c);
        %ハイロー
        c = char( handles.s2oGUI{i,2}(j) );
        fprintf(s, '%c', c);
        %連続動作不許可
        c = char( handles.s2oGUI{i,3}(j) );
        fprintf(s, '%c', c);
        %遅延時間
        c = char( handles.s2oGUI{i,4}(j) );
        fprintf(s, '%c', c);
      end
      %arduinoの処理を待つ
      pause(200/1000);
    end
    %--------------------------------------------------------------------------
    %ミル２アウトプットの送信----------------------------------------------------
    % データは
    % ['G'][センサ番号]([出力先番号][ハイロー])×４[作動時間]　の１１バイトが１セット
    %--------------------------------------------------------------------------
  case 'G'
    %２セット
    for i = 1:2
      %識別コード「G」
      fprintf(s, '%c', 'G');
      %センサのインデックス
      c = char( i - 1 );
      fprintf(s, '%c', c);
      for j = 1:4
        %アウトプットの種類
        c = char( handles.millGUI{i,1}(j) );
        fprintf(s, '%c', c);
        %ハイロー
        c = char( handles.millGUI{i,2}(j) );
        fprintf(s, '%c', c);
      end
      %ミルの動作時間
      c = handles.millGUI{i,3} ;
      fprintf(s, '%c', c);
      %arduinoの処理を待つ
      pause(200/1000);
    end
    %--------------------------------------------------------------------------
    %セッションの設定の送信-------------------------------------------------------
    %データは次の形式
    %識別コード「C」
    %初期状態　　　　８バイト
    %スタートセンサ　４バイト
    %ゴールセンサ　　４バイト
    %セッション数　　１バイト
    %--------------------------------------------------------------------------
  case 'C'
    %識別コード
    fprintf(s, '%c', 'C');
    %セッションの設定
    cl = handles.sessionGUI;
    %初期状態　８つのゲートについて、ゲート開なら１、ゲート閉なら０
    for i = 1:8
      fprintf(s, '%c', cl{1}(i) );
    end
    %スタートセンサ　どのセンサを使うか。０未使用、１〜８センサ、９〜１０ミルのセンサ
    for i = 1:4
      fprintf(s, '%c', cl{2}(i) );
    end
    %ゴールセンサ　上に同じ
    for i = 1:4
      fprintf(s, '%c', cl{3}(i) );
    end
    %セッション回数　０〜１２７の数字。１バイト
    fprintf(s ,'%c', cl{4});
    %--------------------------------------------------------------------------
    %分岐・正解センサ列を送信する------------------------------------------------
    %--------------------------------------------------------------------------
    % [識別コード「H」]                               １
    % [セッションのインデックス]
    % [正解センサ１][正解センサ２]…[127(区切りコード)] 最大１６＋１
    % [ユーザ出力１][ユーザ出力２]…[127(区切りコード)] 最大８　＋１
    %--------------------------------------------------------------------------
  case 'H'
    %識別コード
    fprintf(s, '%c', 'H');
    %セッションのインデックス
    fwrite(s, num-1);
    %正解センサ列のサイズ
    a = size( handles.userdata{num+1,2} );
    a = a(2);
    %正解センサ列をセンサのピンアサインに変換して通信
    if a>0
      for i=1:a
        str = char( handles.userdata{num+1,2}(i) );
        t = MakeSensorNum( str );
        fprintf(s, '%c', t);
      end
    end
    %区切りコード
    fprintf(s, '%c', 127);
    %分岐のサイズ
    a = size( handles.userdata );
    a = a(2) - 2;
    %分岐の出力先を通信する。ピンアサインで記述されているので変換不要
    %不適なデータをはじく（未記述）
    if a>0
      for i=1:a
        fprintf(s, '%c', handles.userdata{num+1,i+2} );
      end
    end
    %区切りコード
    fprintf(s, '%c', 127);
    %--------------------------------------------------------------------------
    %オルタネイションモード------------------------------------------------------
    %[センサの列]…[127]
    %[センサの列]…[127]
  case 'J'
    fwrite(s, 'J');
    %ひとつめの正解センサ列のサイズ
    a = size( handles.userdata(1,:) );
    a = a(2);
    if a>0
      for i=1:a
        str = char( handles.userdata{1,i} );
        t = MakeSensorNum( str );
        fprintf(s, '%c', t);
      end
    end
    %区切りコード
    fprintf(s, '%c', 127);
    %ふたつめの正解センサ列のサイズ
    a = size( handles.userdata(2,:) );
    a = a(2);
    if a>0
      for i=1:a
        str = char( handles.userdata{2,i} );
        t = MakeSensorNum( str );
        fprintf(s, '%c', t);
      end
    end
    %区切りコード
    fprintf(s, '%c', 127);
    %--------------------------------------------------------------------------
    %セッション開始の申請-------------------------------------------------------
  case 'D'
    fprintf(s, '%c', 'D');
    %--------------------------------------------------------------------------
end


%--------------------------------------------------------------------------
% 正解センサをピンアサイン値に変換
%--------------------------------------------------------------------------
function t = MakeSensorNum(str)
switch str
  case 'sensor1'
    t=38;
  case 'sensor2'
    t=39;
  case 'sensor3'
    t=40;
  case 'sensor4'
    t=41;
  case 'sensor5'
    t=42;
  case 'sensor6'
    t=43;
  case 'sensor7'
    t=44;
  case 'sensor8'
    t=45;
  case 'millsensor1'
    t=46;
  case 'millsensor2'
    t=47;
  otherwise
    t=0;
end
%--------------------------------------------------------------------------